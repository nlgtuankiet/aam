/*
 * Copyright 2020 Rainy Season.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    ext {
        kotlin_version = '1.3.71'
        versions = [
            'ktlint': '0.36.0',
        ]
        isInCI = Boolean.parseBoolean(System.getenv().getOrDefault("CI", "false"))
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "com.diffplug.gradle.spotless" version "3.28.1"
    id "io.gitlab.arturbosch.detekt" version "1.8.0"
}

allprojects {

    repositories {
        google()
        jcenter()
    }
}

allprojects {
    apply plugin: 'com.diffplug.gradle.spotless'
    spotless {
        kotlin {
            target '**/*.kt'
            ktlint(versions.ktlint)
            licenseHeaderFile project.rootProject.file('scripts/copyright.txt')
        }
        groovyGradle {
            // same as groovy, but for .gradle (defaults to '*.gradle')
            target '**/*.gradle'
            paddedCell() // Avoid cyclic ambiguities
            // the Groovy Eclipse formatter extends the Java Eclipse formatter,
            // so it formats Java files by default (unless `excludeJava` is used).
            greclipse().configFile(project.rootProject.file('scripts/greclipse.properties'))
            licenseHeaderFile project.rootProject.file('scripts/copyright.txt'), '(buildscript|apply|rootProject)'
        }
    }
}

allprojects {
    apply plugin: 'io.gitlab.arturbosch.detekt'
    detekt {
        failFast = true
        buildUponDefaultConfig = true
        config = project.rootProject.files(".detekt/config.yml")
        reports {
            html.enabled = true
            xml.enabled = true
            txt.enabled = true
        }
    }
    tasks.detekt.jvmTarget = "1.8"
}

