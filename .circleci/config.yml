# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  android_executor:
    docker:
      - image: circleci/android:api-29
    working_directory: ~/aam
    environment:
      JAVA_TOOL_OPTIONS: "-Xmx2048m"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb
  gcloud_executor:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/aam

commands:
  generate_gradle_lock:
    description: "Generate gradle.lock file"
    steps:
      - run:
          name: Delete old gradle.lock if any
          command: rm -rf gradle.lock
      - run:
          name: Generate gradle.lock
          command: find . -name "*.gradle" -type f -exec cat {} > gradle.lock \;
      - run:
          name: Debug gradle.lock
          command: cat gradle.lock
  restore_gradle_cache:
    description: "Restore gradle cache (~/.gradle)"
    steps:
      - generate_gradle_lock
      - restore_cache:
          keys:
            - v1-{{ checksum "gradle/wrapper/gradle-wrapper.properties"}}-{{ checksum "gradle.lock"}}
            - v1-{{ checksum "gradle/wrapper/gradle-wrapper.properties"}}-
  save_gradle_cache:
    description: "Save gradle cache (~/.gradle)"
    steps:
      - generate_gradle_lock
      - save_cache:
          key: v1-{{ checksum "gradle/wrapper/gradle-wrapper.properties"}}-{{ checksum "gradle.lock"}}
          paths:
            - "~/.gradle"

jobs:
  build-release-apk:
    executor: android_executor
    steps:
      - checkout
      - restore_gradle_cache
      - run:
          name: Init gradle
          command: ./gradlew dependencies
      - run:
          name: Build Release Apk
          command: sh ./scripts/build_release_apk.sh
      - store_artifacts:
          path: ./build/universal.apk
      - persist_to_workspace:
          root: .
          paths:
            - build
            - ./**/build
      - save_gradle_cache
  compare-apk:
    executor: gcloud_executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/aam
      - run:
          name: Check list
          command: ls -lha && pwd
      - run:
          name: Compare apk
          command: bash ./scripts/compare_apk.sh
      - persist_to_workspace:
          root: .
          paths:
            - build
            - ./**/build
  danger:
    executor: android_executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/aam
      - run:
          name: Danger
          command: bundle install && bundle exec danger


workflows:
  version: 2
  pull-request-flow:
    jobs:
      - build-release-apk:
          filters:
            branches:
              ignore:
                - master
      - compare-apk:
          requires:
            - build-release-apk
      - danger:
          requires:
            - compare-apk